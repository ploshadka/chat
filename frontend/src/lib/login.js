import {writable} from "svelte/store";
import {getDomain} from "./domain.js";

const isBrowser = typeof window !== 'undefined' && typeof localStorage !== 'undefined';

const storedToken = isBrowser ? localStorage.getItem("access_token") : null;
const storedUser = isBrowser && localStorage.getItem("user")
    ? JSON.parse(localStorage.getItem("user"))
    : null;

export const authStore = writable({
    token: storedToken,
    user: storedUser
});


export function setAuth(token, userData = {}) {
    try {
        const payload = JSON.parse(atob(token.split(".")[1]));

        const user = {
            id: payload.id,
            email: payload.sub,
            role: payload.role || "user",
            name: payload.name || userData?.name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        };

        if (isBrowser) {
            localStorage.setItem("access_token", token);
            localStorage.setItem("user", JSON.stringify(user));
        }

        authStore.set({token, user});

    } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", e);
        authStore.set({token: null, user: null});
    }
}

export async function refreshToken() {
    try {
        let response = await fetch(getDomain() + "refresh", {
            method: "POST",
            headers: {"Content-Type": "application/json"},
            credentials: "include"  // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã –∫—É–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏—Å—å
        });

        if (!response.ok) {
            return false;  // –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
        }

        let data = await response.json();
        // setAuth(data.access_token, {email: data.email});
        setAuth(data.access_token);

        console.log("–¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω");
        return true;
    } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:", err);
        return false;
    }
}

export async function logout() {
    try {
        await fetch(getDomain() + "logout", {
            method: "POST",
            credentials: "include"  // üëà –ü–µ—Ä–µ–¥–∞–µ–º –∫—É–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è refresh-—Ç–æ–∫–µ–Ω–∞
        });
    } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:", err);
    }

    // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    localStorage.removeItem("access_token");
    localStorage.removeItem("user");

    // –û—á–∏—â–∞–µ–º Svelte store
    authStore.set({token: null, user: null});

    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
    window.location.href = "";
}